buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.xy2401.examples.project.spring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}


ext {
	azureVersion = '2.0.5'
	keycloakVersion = '4.5.0.Final'
	springBootAdminVersion = '2.0.3'
	springCloudGcpVersion = '1.0.0.RELEASE'
	springCloudServicesVersion = '2.0.1.RELEASE'
	springCloudTaskVersion = '2.0.0.RELEASE'
	springCloudVersion = 'Finchley.SR1'
	springStatemachineVersion = '2.0.1.RELEASE'
	vaadinVersion = '10.0.5'
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-activemq')
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-amqp')
	implementation('org.springframework.boot:spring-boot-starter-aop')
	implementation('org.springframework.boot:spring-boot-starter-artemis')
	implementation('org.springframework.boot:spring-boot-starter-batch')
	implementation('org.springframework.boot:spring-boot-starter-cache')
	implementation('org.springframework.boot:spring-boot-starter-cloud-connectors')
	implementation('org.springframework.boot:spring-boot-starter-data-cassandra')
	implementation('org.springframework.boot:spring-boot-starter-data-cassandra-reactive')
	implementation('org.springframework.boot:spring-boot-starter-data-couchbase')
	implementation('org.springframework.boot:spring-boot-starter-data-couchbase-reactive')
	implementation('org.springframework.boot:spring-boot-starter-data-elasticsearch')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-data-ldap')
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
	implementation('org.springframework.boot:spring-boot-starter-data-neo4j')
	implementation('org.springframework.boot:spring-boot-starter-data-redis')
	implementation('org.springframework.boot:spring-boot-starter-data-redis-reactive')
	implementation('org.springframework.boot:spring-boot-starter-data-rest')
	implementation('org.springframework.boot:spring-boot-starter-data-solr')
	implementation('org.springframework.boot:spring-boot-starter-freemarker')
	implementation('org.springframework.boot:spring-boot-starter-groovy-templates')
	implementation('org.springframework.boot:spring-boot-starter-hateoas')
	implementation('org.springframework.boot:spring-boot-starter-integration')
	implementation('org.springframework.boot:spring-boot-starter-jdbc')
	implementation('org.springframework.boot:spring-boot-starter-jersey')
	implementation('org.springframework.boot:spring-boot-starter-jooq')
	implementation('org.springframework.boot:spring-boot-starter-mail')
	implementation('org.springframework.boot:spring-boot-starter-mustache')
	implementation('org.springframework.boot:spring-boot-starter-quartz')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation('org.springframework.boot:spring-boot-starter-validation')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-web-services')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	implementation('org.springframework.boot:spring-boot-starter-websocket')
	implementation('com.microsoft.azure:azure-active-directory-spring-boot-starter')
	implementation('com.microsoft.azure:azure-keyvault-secrets-spring-boot-starter')
	implementation('com.microsoft.azure:azure-spring-boot-starter')
	implementation('com.microsoft.azure:azure-storage-spring-boot-starter')
	implementation('com.vaadin:vaadin-spring-boot-starter')
	implementation('de.codecentric:spring-boot-admin-starter-client')
	implementation('de.codecentric:spring-boot-admin-starter-server')
	implementation('io.pivotal.spring.cloud:spring-cloud-services-starter-circuit-breaker')
	implementation('io.pivotal.spring.cloud:spring-cloud-services-starter-config-client')
	implementation('io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry')
	implementation('org.apache.camel:camel-spring-boot-starter:2.22.1')
	implementation('org.apache.cxf:cxf-spring-boot-starter-jaxrs:3.2.5')
	implementation('org.apache.kafka:kafka-streams')
	implementation('org.flywaydb:flyway-core')
	implementation('org.keycloak:keycloak-spring-boot-starter')
	implementation('org.liquibase:liquibase-core')
	implementation('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
	implementation('org.springframework.cloud:spring-cloud-bus')
	implementation('org.springframework.cloud:spring-cloud-cloudfoundry-discovery')
	implementation('org.springframework.cloud:spring-cloud-config-server')
	implementation('org.springframework.cloud:spring-cloud-function-stream')
	implementation('org.springframework.cloud:spring-cloud-function-web')
	implementation('org.springframework.cloud:spring-cloud-gcp-starter')
	implementation('org.springframework.cloud:spring-cloud-gcp-starter-pubsub')
	implementation('org.springframework.cloud:spring-cloud-gcp-starter-storage')
	implementation('org.springframework.cloud:spring-cloud-starter')
	implementation('org.springframework.cloud:spring-cloud-starter-aws')
	implementation('org.springframework.cloud:spring-cloud-starter-aws-jdbc')
	implementation('org.springframework.cloud:spring-cloud-starter-aws-messaging')
	implementation('org.springframework.cloud:spring-cloud-starter-config')
	implementation('org.springframework.cloud:spring-cloud-starter-consul-config')
	implementation('org.springframework.cloud:spring-cloud-starter-consul-discovery')
	implementation('org.springframework.cloud:spring-cloud-starter-gateway')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-ribbon')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-turbine')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-turbine-stream')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-zuul')
	implementation('org.springframework.cloud:spring-cloud-starter-oauth2')
	implementation('org.springframework.cloud:spring-cloud-starter-open-service-broker-webmvc:2.0.1.RELEASE')
	implementation('org.springframework.cloud:spring-cloud-starter-openfeign')
	implementation('org.springframework.cloud:spring-cloud-starter-security')
	implementation('org.springframework.cloud:spring-cloud-starter-sleuth')
	implementation('org.springframework.cloud:spring-cloud-starter-task')
	implementation('org.springframework.cloud:spring-cloud-starter-vault-config')
	implementation('org.springframework.cloud:spring-cloud-starter-zipkin')
	implementation('org.springframework.cloud:spring-cloud-starter-zookeeper-config')
	implementation('org.springframework.cloud:spring-cloud-starter-zookeeper-discovery')
	implementation('org.springframework.cloud:spring-cloud-stream')
	implementation('org.springframework.cloud:spring-cloud-stream-binder-kafka')
	implementation('org.springframework.cloud:spring-cloud-stream-binder-kafka-streams')
	implementation('org.springframework.cloud:spring-cloud-stream-binder-rabbit')
	implementation('org.springframework.cloud:spring-cloud-stream-reactive')
	implementation('org.springframework.data:spring-data-rest-hal-browser')
	implementation('org.springframework.kafka:spring-kafka')
	implementation('org.springframework.retry:spring-retry')
	implementation('org.springframework.session:spring-session-data-redis')
	implementation('org.springframework.session:spring-session-jdbc')
	implementation('org.springframework.shell:spring-shell-starter:2.0.0.RELEASE')
	implementation('org.springframework.statemachine:spring-statemachine-starter')
	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	runtimeOnly('com.h2database:h2')
	runtimeOnly('com.microsoft.sqlserver:mssql-jdbc')
	runtimeOnly('mysql:mysql-connector-java')
	runtimeOnly('org.apache.derby:derby')
	runtimeOnly('org.hsqldb:hsqldb')
	runtimeOnly('org.postgresql:postgresql')
	compileOnly('org.springframework.boot:spring-boot-configuration-processor')
	compileOnly('org.projectlombok:lombok')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
	testImplementation('io.projectreactor:reactor-test')
	testImplementation('org.springframework.batch:spring-batch-test')
	testImplementation('org.springframework.cloud:spring-cloud-starter-contract-stub-runner')
	testImplementation('org.springframework.cloud:spring-cloud-starter-contract-verifier')
	testImplementation('org.springframework.cloud:spring-cloud-stream-test-support')
	testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
	testImplementation('org.springframework.security:spring-security-test')
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
		mavenBom "org.springframework.statemachine:spring-statemachine-bom:${springStatemachineVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
		mavenBom "com.microsoft.azure:azure-spring-boot-bom:${azureVersion}"
		mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:${springCloudServicesVersion}"
		mavenBom "org.keycloak.bom:keycloak-adapter-bom:${keycloakVersion}"
		mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-task-dependencies:${springCloudTaskVersion}"
	}
}
